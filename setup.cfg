[tool.black]
line-length = 88
target-version = 'py39'
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 88

[tool.autopep8]
max_line_length = 88

[flake8]
# E203 whitespace before ':'
# W503 line break before binary operator
# D100 Missing docstring in public module
# D101 Missing docstring in public class
# D102 Missing docstring in public method
# D103 Missing docstring in public function
# D104 Missing docstring in public package
# D105 Missing docstring in magic method
# D106 Missing docstring in public nested class
# D107 Missing docstring in __init__
# C901 ... is too complex
# Q000 Remove bad quotes
# Q001 Remove bad quotes from multiline string
# Q002 Remove bad quotes from docstring
# Q003 Change outer quotes to avoid escaping inner quotes
# flake8-string-format:
# P101 format string does contain unindexed parameters
# P103 other string does contain unindexed parameters

extend-ignore = E203,W503,D100,D101,D102,D103,D104,D105,D106,D107,C901,P101,P103
max-line-length = 88
max-complexity = 10
statistics = True
count = True

# flake8-quotes settings
inline-quotes = "
multiline-quotes = """
docstring-quotes = """
avoid-escape = True

# flake8-coding settings
no-accept-encodings = True

# Пути указываются относительно Source root текущего проекта
# (требуется только для подсветки в File Watcher и для прямого запуска flake8 из
# каталога Repository root или Source root.
# Мержится с exclude из .pre-commit-config при запуске из pre-commit хука)

exclude =
    .venv,
    .git,
    __pycache__,

per-file-ignores =

[coverage:report]

# Rules for skip line in coverage report
exclude_lines =
# Have to re-enable the standard pragma
    pragma: no cover

# Don't complain about missing debug-only code:
    def __repr__
    if self\.debug

# Don't complain if tests don't hit defensive assertion code:
    raise AssertionError
    raise NotImplementedError

# Don't complain if non-runnable code isn't run:
    if __name__ == .__main__.:

# Don't complain TYPE_CHECKING imports
    if TYPE_CHECKING:

# Rules for skip files in coverage report
omit =
    **/__**__.py
    tests/*

[coverage:html]

# Custom output path for html report
directory = .artefacts/htmlcov


[tool:pytest]
# PytestDeprecationWarning: The 'junit_family' default value
# will change to 'xunit2' in pytest 6.0.
# Add 'junit_family=xunit1' to your pytest.ini file to keep the current format
# in future versions of pytest and silence this warning.
junit_family = xunit1

# Directories that are not visited by pytest collector:
norecursedirs = *.egg .eggs dist build docs .tox .git __pycache__
looponfailroots = vertica_python tests

# Test files
testpaths = tests
python_files = *.py
python_classes = Test*
python_functions = test_*

# You will need to measure your tests speed with `-n auto` and without it,
# so you can see whether it gives you any performance gain, or just gives
# you an overhead. See `docs/template/development-process.rst`.
addopts =
    --tb=short
    --doctest-modules
    --color=yes
    --cov=vertica_python
    --cov-branch
    --cov-report=term-missing:skip-covered
    --cov-report=html
    --cov-fail-under=85

[mypy]
# Mypy configuration:
# https://mypy.readthedocs.io/en/latest/config_file.html
python_version = 3.9

show_error_codes = True
show_column_numbers = True
show_error_context = True
ignore_missing_imports = True
warn_unused_ignores = True
warn_redundant_casts = True
warn_unreachable = True

;Strict
strict_optional = True
disallow_untyped_calls = True
disallow_untyped_defs = True
disallow_incomplete_defs = True
check_untyped_defs = True
no_implicit_optional = True
warn_return_any = True
disallow_any_generics = True
